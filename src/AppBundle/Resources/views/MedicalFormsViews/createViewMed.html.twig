{% extends '::basemedphysicians.html.twig' %}
{% block stylesheets %}
    <link rel="stylesheet" type="text/css" href="{{ asset('bundles/app/md-assets/vendors/css/ui/jquery-ui.min.css')}}">
    <link rel="stylesheet" type="text/css" href="{{ asset('bundles/app/md-assets/css/plugins/ui/jqueryui.css')}}">
    <style>
        
        /* -- dialog tooltip */

.ui-dialog{
    box-shadow: 0px 0px 15px 2px rgba(0, 0, 0, 0.6);}
.ui-dialog .ui-dialog-title {
    font-size:1.3rem; }
.ui-dialog .ui-widget-header {
    border: none;
    background: transparent; }
.ui-dialog .ui-button {
    border-color: #F6BB42!important;
    background-color: #F6BB42!important;
    color: #FFFFFF; 
}  
.ui-dialog .ui-button:hover {
    border-color: #FFCE54!important;
    background-color: #FFCE54!important;
    color: #FFF!important; }

.ui-dialog .ui-button:first-child {
    color: #666!important;
    background-color: #c6e4ec!important;
    border-color: #c6e4ec!important; 
}

.ui-dialog .ui-button:first-child:hover {
    color: #666;
    background-color: #E6F3F7!important;
    border-color: #E6F3F7!important;
}

.ui-dialog .ui-icon-closethick {
    
    display: inline-block;
    font: normal normal normal 14px/1 FontAwesome;
    font-size: inherit;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}
.ui-dialog .ui-icon-closethick:after {
    position: absolute;
    text-indent: 0;
    content: "\f00d";
    font: normal normal normal 14px/1 FontAwesome;
    font-size: 1.3rem;
    display: inline-block;
    width: 16px;
    left: -12px;
    top: -7px;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale; }
.ui-dialog .ui-dialog-titlebar {
    padding: 0.8rem 1.5rem; }
.ui-dialog .ui-dialog-titlebar-close {
    right: 1rem;
    border: none!important;
    background: transparent!important;
    color: #333; }
.ui-dialog .ui-dialog-content {
    padding: 0.8rem 1.5rem; }
.ui-dialog .ui-widget-content {
    background: transparent; }
.ui-dialog.ui-resizable .ui-resizable-handle.ui-icon {
    background-image: url("../../../images/icons/textarea-expand.png");
    background-repeat: no-repeat;
    background-position: 100% 100%; }
.ui-dialog.ui-resizable .ui-resizable-se {
    right: 3px;
    bottom: 3px;
    width: 12px;
    height: 12px; }

/* dialog tooltip -- */
        
    </style>
{% endblock %}

{% block body -%}

    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="card-block" style="">
                    Para crear su formulario use la estructura base que ofrece la heramienta seleccionando campos ya creados o creando los campos que necesite en la opción crear campo. 
                    Adicionalmente puede indicar si el campo es requerido o no.
                </div> 
                <div class="conf-modal-dialog " title="¿Confirma eliminar pregunta?" style="display:none">
                    <p >Esta acción no podrá deshacerse.  </p>
                    <div  id='preloader_del' class='preloader_del' style="height: 10px;"><div id='preloader_1'> <span></span> <span></span> <span></span> <span></span> <span></span> </div></div>
                </div>
                <div class="conf-modal-dialog-cat " title="¿Confirma eliminar esta categoría?" style="display:none">
                    <p >Esta acción no podrá deshacerse.  </p>
                    <div  id='preloader_del' class='preloader_del' style="height: 10px;"><div id='preloader_1'> <span></span> <span></span> <span></span> <span></span> <span></span> </div></div>
                </div>
                <div class="conf-modal-dialog-cat-notd " title="Acción no permitida"  style="display:none">
                    <p >Esta acción no puede ejecutarse, para eliminar la categoría borre sus preguntas primero.  </p>                    
                </div>
            </div>               
        </div>
      
        <div class="card">
            <div class="card-header">
                <h4 class="card-title" id="horz-layout-basic">FORMULARIO MÉDICO <a target="_blank" class="btn btn-outline-primary" href="{{ path('medicalforms_fill_med', { 'id': entity.medicalForm.formName }) }}" style=" float:  right;" >ver vista de paciente</a> </h4>
                
            </div>
            <div class="card-body">
                <div class="card-block" style="padding: 3.4rem;">
                    <div class="row">
                        {{ form_start(form,{ 'attr': {'class': 'formAmd formViewMed','id':'createview'} }) }}
                        <fieldset class="form-group position-relative">
                            <div class="col-md-6">
                                {{ form_row(form.name,{'attr':{'class':"form-control input-lg"} }) }}
                                
                            </div><div class="col-md-6">
                                {{ form_row(form.specialty,{'attr':{'class':"form-control input-lg"} }) }}
                            </div>
                        </fieldset>
                        
                        <div class="table-responsive">
                            <table cellpadding="0" cellspacing="0" border="0" width="90%" class="table table-responsive mb-0 table-createView formViewMedTablet">
                                <thead>
                                    <tr>
                                        <th class=" ">Campos</th> 
                                        <th class=" ">INCLUIR </th>
                                        <th class=" ">OBLIGATORIO</th>
                                        <th class=" ">ACCIONES</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!--+-->{% set grOp = [] %} 
                                    <!--+-->{% set grT = 1 %} 
                                    <!--+-->{% set gr = '' %} 
                                    <!--+-->{% set fs = '' %} 
                                    {% for entitypage in entities %}
                                        {% if entitypage['field'].type=="page" %}
                                            <tr class="trPage" id="page_tr_{{entitypage['field'].id}}" data-idf="{{entitypage['field'].id}}">
                                                <td  class="td-page"><a class="page-label masBtn" rel="page_{{entitypage['field'].id}}" href="#"></a>{{entitypage['field'].label}} 
                                                    <!--button type="button" class="btn btn-outline-secondary nuevo-fs" style="padding: 0.25rem 0.5rem; float: right;text-transform: initial;" title="Agregar una nueva categoría" data-fs="{{entitypage['field'].id}}"  data-gr="" ><i class="fa fa-plus"></i></button-->
                                                    <!--a href="{{ path('medicalformsfieldsets_new_med', { 'idf': entity.medicalForm.id, 'idfv': entity.id, 'idfp': entitypage['field'].id   }) }}" class="btn mr-1 btn-primary btn-sm " style=" float: right;text-transform: initial;"> Agregar nueva categoría </a-->
                                                </td>
                                                
                                                <td class="text-center">
                                                    <input type="checkbox" class="pageField fieldselect form-control" name="fieldsets[]" value="{{entitypage['field'].id}}" id="page_{{entitypage['field'].id}}" />
                                                </td> 
                                                <td class="text-center">

                                                    
                                                    
                                                </td>
                                                <td class="text-center ">
                                                    </td>
                                            </tr>    
                                        {% endif%}
                                        {% for  keyf,entityfieldset in entitypage %} 
                                            {% if keyf!='field' %}
                                                {% set fs =  entityfieldset.fieldset.id %}
                                                <tr id="fs_{{entityfieldset.fieldset.id}}" class="trFieldset" data-idf="{{entityfieldset.fieldset.id}}"  data-order="{{entityfieldset.fieldset.position}}" data-pg="{{entitypage['field'].id}}">
                                                    <td  class="td-fieldset">
                                                        <span>{{ entityfieldset.fieldset.label }} <!--a href="{{ path('medicalformsfields_new_f_med',{'idf':entity.medicalForm.id,'ids':entityfieldset.fieldset.id,'idfv':entity.id}) }}" class="btn mr-1 btn-secondary btn-sm agregar-preg" rel="{{entityfieldset.fieldset.id}}" style=" float: right;font-family:dosisregular;">Agregar pregunta </a--></span>
                                                        
                                                        {% if entityfieldset.fieldset.physician is not null and entityfieldset.fieldset.physician.id==physician.id %}    <button type="button" class="btn btn-outline-secondary eliminar-fs conf-modal-dialog-cat-btn"  style="padding: 0.25rem 0.5rem; float: right;text-transform: initial; margin-left: 4px;"   title="Eliminar pregunta" data-fs="{{entityfieldset.fieldset.id}}"  data-gr=""><i class="fa fa-minus"></i></button>  {% endif %}
                                                         <button type="button" class="btn btn-outline-secondary nuevo-fs" style="padding: 0.25rem 0.5rem; float: right;text-transform: initial;" title="Agregar una nueva categoría"  data-fs="{{entityfieldset.fieldset.id}}"  data-gr="" ><i class="fa fa-plus"></i></button>
                                                    </td>
                                                    
                                                    <td class="text-center">
                                                        <input type="checkbox" class="fieldselect form-control page_{{entitypage['field'].id}}" name="fieldsets[]" value="{{entityfieldset.fieldset.id}}" id="page_{{entitypage['field'].id}}-fieldset_{{entityfieldset.fieldset.id}}"   />
                                                    </td> 
                                                    <td class="text-center">

                                                    </td>
                                                    <td class="text-center ">
                                                        <button type="button" class="btn btn-outline-primary nuevo" style="padding: 0.25rem 0.5rem;" title="Agregar una nueva pregunta" data-fs="{{entityfieldset.fieldset.id}}"  data-gr=""><i class="fa fa-plus"></i></button>
                                                    </td>
                                                </tr>
                                                                                                                                                                                                
                                                {% set indT=0 %}
                                                {% set ant=0 %}
                                                {% set antG=0 %}
                                                {% set grOp = [] %} 
                                                {% for field in entityfieldset.fields %}  
                                                    {% if field.field=='group' or field.field=='grid'%}                    
                                                        {% set grOp = grOp|merge([field.id]) %}                     
                                                    {% endif %}
                                                    {% set indT=grOp|length %}  
                                                    <tr id="tr-field-{{field.id}}" class='move' data-idf="{{field.id}}" data-idfs="{{entityfieldset.fieldset.id}}" data-pg="{{entitypage['field'].id}}" data-order="{{field.orderid}}"  data-gr="{% if field.subgroup is not null%}{{field.subgroup.id}}{% endif%}" data-level="{{indT}}">     
                                                        <td class="td-field-{{field.field}} {% if field.field=='group'  %}td-subgroup level_{{indT}} td-group td-group-{{indT-1}}{% elseif field.field=='grid' %}td-group td-subgroup level_{{indT}} td-group-{{indT-1}}{% else %}td-field level_{{indT}} td-field-{{indT}}{% endif %}"><a href="{{ path('medicalformsfields_show_med', { 'id': field.id,'idfv':entity.id }) }}">{{ field.label |slice(0, 100)}}{%if field.label |length>100%}...{%endif%}</a></td>

                                                        
                                                        <td class="text-center td-sel">
                                                            
                                                            {% if field.field=='group' or field.field=='grid'%}

                                                                <input type="checkbox" data-group="{{field.id}}"  class="fieldselect form-control page_{{entitypage['field'].id}} fieldset_{{entityfieldset.fieldset.id}} {% if field.subgroup.id is defined%}group_{{field.subgroup.id}}{% endif %} group" id="page_{{entitypage['field'].id}}-fieldset_{{entityfieldset.fieldset.id}}-group{%if (grOp|join('_')!='')%}_{{ grOp|join('-') }}{%endif%}" name="fields[]" value="{{field.name}}" />

                                                            {% else %}                              

                                                                <input type="checkbox"  data-idsubfields="group_{{field.id}}"  class="fieldselect form-control page_{{entitypage['field'].id}} fieldset_{{entityfieldset.fieldset.id}} group_{{gr}}" name="fields[]" value="{{field.name}}" id="page_{{entitypage['field'].id}}-fieldset_{{entityfieldset.fieldset.id}}-group_{{ grOp|join('-') }}-{{ field.id }}"  />

                                                            {% endif %}
                                                        </td>
                                                        <td class="text-center td-req">
                                                            {% if field.field!='group' and field.field!='grid' %}

                                                                <input type="checkbox" class="requeselect" name="reque[]" {% if field.required==1%}checked="checked"{% endif%} value="{{field.name}}" />

                                                            {% endif %}

                                                        </td>
                                                        <td class="text-center btn-actions" style="width: 200px;">
                                                            {% if field.physician is not null and field.physician.id==physician.id %}                                                                                                                                                                                            
                                                                <button type="button" class="btn btn-outline-primary subir" style="padding: 0.25rem 0.5rem;" title="Subir orden" data-fs="{{entityfieldset.fieldset.id}}"  data-gr="{% if field.subgroup is not null%}{{field.subgroup.id}}{% endif%}" ><i class="fa fa-arrow-up"></i></button>
                                                                <button type="button" class="btn btn-outline-primary bajar" style="padding: 0.25rem 0.5rem;"  title="Bajar orden" data-fs="{{entityfieldset.fieldset.id}}"  data-gr="{% if field.subgroup is not null%}{{field.subgroup.id}}{% endif%}"><i class="fa fa-arrow-down"></i></button>                                                                
                                                                <button type="button" class="btn btn-outline-primary nuevo" style="padding: 0.25rem 0.5rem;" title="Agregar una nueva pregunta" data-fs="{{entityfieldset.fieldset.id}}"  data-gr="{% if field.subgroup is not null%}{{field.subgroup.id}}{% endif%}"><i class="fa fa-plus"></i></button>
                                                                <button type="button" class="btn btn-outline-primary eliminar conf-modal-dialog-btn" style="padding: 0.25rem 0.5rem;"  title="Eliminar pregunta" data-fs="{{entityfieldset.fieldset.id}}"  data-gr="{% if field.subgroup is not null%}{{field.subgroup.id}}{% endif%}"><i class="fa fa-minus"></i></button>                                                                
                                                            {% else %}  
                                                                <button type="button" class="btn btn-outline-primary nuevo"  style="padding: 0.25rem 0.5rem;" title="Agregar una nueva pregunta" data-fs="{{entityfieldset.fieldset.id}}"  data-gr="{% if field.subgroup is not null%}{{field.subgroup.id}}{% endif%}"><i class="fa fa-plus"></i></button>                                                                
                                                            {% endif %}
                                                        </td>
                                                    </tr>
                                                    {% if loop.index < entityfieldset.fields|length  %}
                                                        {% set bk=0 %}
                                                        {% set indS=loop.index %}
                                                        {% for grO in grOp|reverse %}                                      
                                                            {% if ( bk==0 and (entityfieldset.fields[indS].subgroup is null or entityfieldset.fields[indS].subgroup.id!=grO) )   %}                                                                          
                                                            {% set grOp=grOp|slice(0, (grOp|length) -1)  %}
                                                            {% elseif(bk==0 and  entityfieldset.fields[indS].subgroup.id==grO) %}
                                                            {% set antG=grO %}                            
                                                            {% set bk=1 %}
                                                            {% endif %}                                    
                                                                {% endfor %}                        
                                                                    {% endif %} 


                                                                        {% endfor %}

                                                                            {% endif %}
                                                                                {% endfor %}
                                                                                    {% endfor %}
                                                                                    </tbody>
                                                                                </table>
                                                                            </div>
                                                                            <div class="form-actions right">
                                                                                
                                                                                <button type="submit" id="send" name="send" class="btn btn-primary">
                                                                                    <i class="icon-check2"></i> Guardar
                                                                                </button>

                                                                            </div>

                                                                            {{ form_end(form) }}
                                                                            
                                                                            
                                                                            <div class="row form-field hidden"> 
                            {# render(controller('AppBundle:MedicalFormsFields:createAjax', { 'idf':entity.medicalForm.id,'ids':fs,'idfv':entity.id  } )) #}
                        </div>
                        
                                                                            

                                                                        </div>
                                                                    </div>

                                                                </div>
                                                            </div>

                                                        </div>



{% endblock %}
    {% block javascripts %}
        <script src="{{ asset('bundles/app/md-assets/js/core/libraries/jquery_ui/jquery-ui.min.js') }}" type="text/javascript"></script>
        <script>
            
            function activarSelect(input){
                
                //activate children
                    //$('input:checkbox[id^=' + $(this).prop("id") + ']').prop("checked", $(this).is(":checked")).prop('disabled', false).change();
                    $tr = $(input).parents("tr");
                    
                    if ($tr.find("td.td-field-group").length>0 || $tr.find("td.td-field-grid").length>0){
                        var nextTr = '';                                                
                        var lv = $(input).parents("tr").data("level");
                        var idf = $(input).parents("tr").data("idf");
                        var thisSel = input;

                        $tr.nextAll("tr").each(function( index, element ) {
                            if(($(element).data("level")<=lv && idf!=$(element).data("gr")) || $(element).hasClass("trPage") || $(element).hasClass("trFieldset")){
                                nextTr = element
                                return false;
                            }else{
                                if ($(thisSel).is(":checked")) $(element).find(".fieldselect").prop("checked", true);
                                else $(element).find(".fieldselect").prop("checked", false);
                            }
                        });
                    }else if ($tr.hasClass("trFieldset")){
                        var thisSel = input;
                        $tr.nextAll("tr").each(function( index, element ) {
                            if($(element).hasClass("trFieldset")||$(element).hasClass("trPage")){                               
                                return false;
                            }else{
                                if ($(thisSel).is(":checked")) $(element).find(".fieldselect").prop("checked", true);
                                else $(element).find(".fieldselect").prop("checked", false);
                            }
                        });
                    }else if ($tr.hasClass("trPage")){
                        var thisSel = input;
                        $tr.nextAll("tr").each(function( index, element ) {
                            if($(element).hasClass("trPage")){                               
                                return false;
                            }else{
                                if ($(thisSel).is(":checked")) $(element).find(".fieldselect").prop("checked", true);
                                else $(element).find(".fieldselect").prop("checked", false);
                            }
                        });
                    }
                
            }
            
            function activarChange(input){
                
                //activate parents
                if ($(input).is(":checked")) {
                    var bc = $(input).prop("id");
                    var r = bc.split("-");
                    var rAux = '';
                    for (i = 0; i < r.length; i++) {
                        if (rAux !== '')
                            rAux = rAux + "-" + r[i];
                        else
                            rAux = r[i];                        
                        if (!$('#' + rAux).is(":checked"))
                            $('#' + rAux).prop("checked", true);
                    }                        
                }

                
            }
            
            function eliminarPreguntaModal(){
                
                $( ".conf-modal-dialog" ).dialog({
                        autoOpen: false,
                        resizable: false,
                        height: "auto",
                        width: 400,
                        modal: true,
                        buttons: {
                                "Borrar la pregunta": fEliminar,
                                "Cancelar": function() {
                                        $( this ).dialog( "close" );
                                }
                        },
                });
                $( ".conf-modal-dialog-btn" ).on("click",function(){
                    $("#preloader_del").hide();     
                        $( ".conf-modal-dialog" ).dialog("open");
                        
                        //$(".ui-dialog-titlebar-close").html('<i class="fa fa-minus"></i>');
                        //return false;
                });
                
            }
            function eliminarCategoriaModal(){
                $( ".conf-modal-dialog-cat" ).dialog({
                        autoOpen: false,
                        resizable: false,
                        height: "auto",
                        width: 400,
                        modal: true,
                        buttons: {
                                "Borrar la categoría": fEliminarCat,
                                "Cancelar": function() {
                                        $( this ).dialog( "close" );
                                }
                        },
                });
                $( ".conf-modal-dialog-cat-btn" ).on("click",function(){
                    $(".preloader_del").hide();     
                    var idf = $("#"+$(this).parents("tr:first").prop("id")).data("idf");
                    
                    if ($( "tr[data-idfs='"+idf+"']").length<=0){
                            $( ".conf-modal-dialog-cat" ).dialog("open");
                        }else{
                            $(".conf-modal-dialog-cat-notd").dialog("open");
                    }
                        //$(".ui-dialog-titlebar-close").html('<i class="fa fa-minus"></i>');
                        //return false;
                });
                $( ".conf-modal-dialog-cat-notd" ).dialog({
                        autoOpen: false,
                        resizable: false,
                        height: "auto",
                        width: 400,
                        modal: true,
                        buttons: {
                                "Cerrar": function() {
                                        $( this ).dialog( "close" );
                                }
                        },
                });
            }
            function loadFormField(fs){
                var path = '{{ path("medicalformsfields_create_ajax_f_med", {'idf': entity.medicalForm.id, 'ids': '_s', 'idfv': entity.id}) }}';
                path = path.replace("_s", fs);
                var fieldset= fs;
                /*$(".btn-submit-field").prop('disabled', true);*/
                $(".agregar-preg").prop('disabled', true);
                $(".tr-field" ).remove();                    
                $( "<tr id='agregar-preg-tr-"+fieldset+"' class='tr-field'><td colspan='4' id='agregar-preg-td-"+fieldset+"'><div class='wrapper-pl'> <div id='preloader_1'> <span></span> <span></span> <span></span> <span></span> <span></span> </div></div></td></tr>" ).insertAfter( "#fs_"+fieldset );
                            
                            
                $.ajax({                        
                    url: path                        
                })
                .done(function (data) { 
                    $(".agregar-preg").prop('disabled', false);
                    if (typeof data !== 'undefined') {
                        if (data.hasOwnProperty('form')) {
                            $("#preloader_1").remove();/**/
                            $("#agregar-preg-td-"+fieldset).append(data.form ); 
                            ajustForm(fieldset);
                            ajaxForm();

                        }

                        /*alert(jqXHR.responseJSON.message);*/

                    } else {
                        alert(data);
                    }
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                    $(".agregar-preg").prop('disabled', false);
                });
                
            }
            function loadFormFieldTr(elem,fs,gr){
                var path = '{{ path("medicalformsfields_create_ajax_f_med", {'idf': entity.medicalForm.id, 'ids': '_s', 'idfv': entity.id}) }}';
                path = path.replace("_s", fs);
                var fieldset = fs;
                var group = gr;
                var order = ($(elem).parents("tr").hasClass("trFieldset")!==true) ? $(elem).parents("tr").data("idf"): '';
                /*$(".btn-submit-field").prop('disabled', true);*/
                //alert($(elem).parents("tr").get( 0 ).tagName)
                $(".agregar-preg").prop('disabled', true);
                $(".tr-field" ).remove();                    
                $( "<tr id='agregar-preg-tr-"+fieldset+"' class='tr-field'><td colspan='4' id='agregar-preg-td-"+fieldset+"'><div class='wrapper-pl'> <div id='preloader_1'> <span></span> <span></span> <span></span> <span></span> <span></span> </div></div></td></tr>" ).insertAfter( $(elem).parents("tr"));
                            
                $.ajax({                        
                    url: path                        
                })
                .done(function (data) { 
                    $(".agregar-preg").prop('disabled', false);
                    if (typeof data !== 'undefined') {
                        if (data.hasOwnProperty('form')) {
                            $("#preloader_1").remove();/**/
                            $("#agregar-preg-td-"+fieldset).append(data.form ); 
                            ajustForm(fieldset);
                            ajaxForm();
                            $("#appbundle_medicalformsfields_subgroup").val(group);
                            $("#appbundle_medicalformsfields_medicalFormsFieldset").val(fieldset);
                            $("#appbundle_medicalformsfields_orderid").val(order);
                        }

                        /*alert(jqXHR.responseJSON.message);*/

                    } else {
                        alert(data);
                    }
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                    $(".agregar-preg").prop('disabled', false);
                });
                
            }
            
            function loadFormFieldTrFs(elem,fs){
                var path = '{{ path("medicalformsfieldsets_create_ajax_f_med", {'idf': entity.medicalForm.id, 'idfs': '_fs', 'idfv': entity.id}) }}';
                path = path.replace("_fs", fs);
                var fieldset = fs;
                //var group = gr;
                var order = $(elem).parents("tr").data("idf");
                /*$(".btn-submit-field").prop('disabled', true);*/
                //alert($(elem).parents("tr").get( 0 ).tagName)
                $(".agregar-preg").prop('disabled', true);
                $(".tr-field" ).remove();
                
                var item = $("#fs_"+fieldset).nextAll(".trFieldset").first();
                var listItem = $(item)[0];                
                var idnextfs = $( "tr" ).index( listItem );
                
                var itempg = $("#fs_"+fieldset).nextAll(".trPage").first();
                listItem = $(itempg)[0];                
                var idnextpg = $( "tr" ).index( listItem );
                
                var itemlast = $(".formViewMedTablet tr").last();
                                                       
                if(idnextfs < idnextpg){                    
                    $( "<tr id='agregar-preg-tr-"+fieldset+"' class='tr-field'><td colspan='4' id='agregar-preg-td-"+fieldset+"'><div class='wrapper-pl'> <div id='preloader_1'> <span></span> <span></span> <span></span> <span></span> <span></span> </div></div></td></tr>" ).insertBefore(item);
                     $(item).find("input:first").focus();
                }else if(idnextfs === 0 && idnextpg === 0 ){                    
                    $( "<tr id='agregar-preg-tr-"+fieldset+"' class='tr-field'><td colspan='4' id='agregar-preg-td-"+fieldset+"'><div class='wrapper-pl'> <div id='preloader_1'> <span></span> <span></span> <span></span> <span></span> <span></span> </div></div></td></tr>" ).insertAfter(itemlast);
                    $(itemlast).find("input:first").focus();
                }else{                    
                    $( "<tr id='agregar-preg-tr-"+fieldset+"' class='tr-field'><td colspan='4' id='agregar-preg-td-"+fieldset+"'><div class='wrapper-pl'> <div id='preloader_1'> <span></span> <span></span> <span></span> <span></span> <span></span> </div></div></td></tr>" ).insertBefore(itempg);
                    $(itempg).find("input:first").focus();
                }
                                                           
                $.ajax({                        
                    url: path                        
                })
                .done(function (data) { 
                    $(".agregar-preg").prop('disabled', false);
                    if (typeof data !== 'undefined') {
                        if (data.hasOwnProperty('form')) {
                            $("#preloader_1").remove();/**/
                            $("#agregar-preg-td-"+fieldset).append(data.form ); 
                            
                            $("#agregar-preg-td-"+fieldset+ " form").prop("id","agregar-preg-form-"+fieldset).addClass("ajaxFormFs");
                            $(".cancelar").click(function(){
                                $( ".tr-field" ).remove();
                                return false;
                            });
                            $("#appbundle_medicalformsfieldsets_position").val(order);                            
                            $( ".ajaxForm" ).submit(function( event ) {  
                                $(".btn-submit-field").prop("disabled",true);
                                $(".btn-submit-field").html("Enviando...");

                                $.ajax({
                                     type: $(this).attr('method'),
                                     url: $(this).attr('action'),
                                     data: $(this).serialize()
                                 })
                                 .done(function (data) {
                                     if (typeof data.message !== 'undefined') {
                                        //alert(data.message);
                                        $(".tr-field" ).remove();       
                                        
                                        var fieldset = data.fieldaftid;
                                        //fieldaft
                                        var idAf = '';
                                        var str = '';
                                        
                                        var item = $("#fs_"+fieldset).nextAll(".trFieldset").first();
                                        var listItem = $(item)[0];                
                                        var idnextfs = $( "tr" ).index( listItem );

                                        var itempg = $("#fs_"+fieldset).nextAll(".trPage").first();
                                        listItem = $(itempg)[0];                
                                        var idnextpg = $( "tr" ).index( listItem );
                                        var newFs = $("#fs_"+fieldset).clone();
                                        
                                        var itemlast = $(".formViewMedTablet tr").last();
                                        
                                        if(idnextfs < idnextpg){                                                                                         
                                            $(newFs).insertBefore(item);                                                        
                                        }else if(idnextfs === 0 && idnextpg === 0 ){                    
                                            $(newFs).insertAfter(itemlast);      
                                        }else{           
                                            $(newFs).insertBefore(itempg);                                            
                                        }
                                        
                                        $(newFs).find(".td-fieldset span").html(data.name);
                                        
                                        $(newFs).prop("id", "fs_"+data.id);
                                        $(newFs).removeData("idf").removeAttr("data-idf").attr("data-idf",data.id);
                                        $(newFs).removeData("order").removeAttr("data-order").attr("data-order",data.order);
                                        
                                        $(newFs).find(".nuevo-fs").removeData("fs").removeAttr("data-fs").attr("data-fs",data.id);
                                        $(newFs).find(".nuevo").removeData("fs").removeAttr("data-fs").attr("data-fs",data.id);
                                        $(newFs).find(".fieldselect").val(data.id); 
                                        
                                        str = $(newFs).find(".fieldselect").prop("id");
                                        idAf = str.replace(fieldset, data.id);                                
                                        $(newFs).find(".fieldselect").prop("id",idAf);
                                        
                                        if($(newFs).find(".conf-modal-dialog-cat-btn").length===0){                                            
                                            $( '<button type="button" class="btn btn-outline-secondary eliminar-fs conf-modal-dialog-cat-btn"  style="padding: 0.25rem 0.5rem; float: right;text-transform: initial; margin-left: 4px;"   title="Eliminar pregunta" data-fs="'+data.id+'"  data-gr=""><i class="fa fa-minus"></i></button>' ).insertAfter( $(newFs).find(".td-fieldset span") );
                                        }
                                       
                                        $(newFs).find(".fieldselect:checkbox").click(function () {
                                            activarSelect(this);
                                        }).change(function () {
                                            activarChange(this);
                                        });
                                        eliminarCategoriaModal();
            

                                     }
                                 })
                                 .fail(function (jqXHR, textStatus, errorThrown) {
                                     if (typeof jqXHR.responseJSON !== 'undefined') {
                                         if (jqXHR.responseJSON.hasOwnProperty('form')) {
                                             //alert(jqXHR.responseJSON.form)
                                            $('.tr-field td').html("").append(jqXHR.responseJSON.form);
                                            /*$("#appbundle_medicalformsfields_medicalFormsFieldset")*/
                                            //ajustForm($("#appbundle_medicalformsfields_medicalFormsFieldset").val());                                             
                                            //ajaxForm();
                                         }

                                         //alert(jqXHR.responseJSON.message);

                                     } else {
                                         alert(errorThrown);
                                     }

                                 });
                                 event.preventDefault(); /**/
                            }); 
                            //$("#appbundle_medicalformsfields_subgroup").val(group);
                            //$("#appbundle_medicalformsfields_medicalFormsFieldset").val(fieldset);
                            //$("#appbundle_medicalformsfields_orderid").val(order);
                        }

                        /*alert(jqXHR.responseJSON.message);*/

                    } else {
                        alert(data);
                    }
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);
                    $(".agregar-preg").prop('disabled', false);
                });
                
            }
            
            function ajustForm(fs){
                var fieldset= fs;
                $("#agregar-preg-td-"+fieldset+ " form").prop("id","agregar-preg-form-"+fieldset).addClass("ajaxForm");
                $("#agregar-preg-form-"+fieldset+" #appbundle_medicalformsfields_medicalFormsFieldset").val(fieldset);
                $(".cancelar").click(function(){
                    $( ".tr-field" ).remove();
                    return false;
                });  
                $(".formAmd .row-f").prepend('<input type="hidden" id="field_name" maxlength="20">');
                $("#appbundle_medicalformsfields_label").keyup(function () {
                    var valF = $(this).val();
                    changeVal(valF);
                });
                $("#appbundle_medicalformsfields_label").change(function () {
                    var valF = $(this).val();
                    changeVal(valF);
                });
                $("#field_name").keyup(function () {
                    var valF = $(this).val();
                    result = valF.replace(/[^A-Za-z0-9;]/g, "_").toLowerCase();
                    if (result.length > 20) {
                        result = result.substr(0, 20);
                    }
                    $(this).val(result);
                });
                $("#field_name").change(function () {
                    var valF = $(this).val();
                    result = valF.replace(/[^A-Za-z0-9;]/g, "_").toLowerCase();
                    if (result.length > 20) {
                        result = result.substr(0, 20);
                    }
                    $(this).val(result);
                });
                $("#field_name_edit").click(function () {
                    $("#field_name").removeAttr("disabled");
                    $("#field_name_edit").attr("disabled", "disabled").removeClass("lilaOscuro").addClass("gris");
                });
                /*$(".formAmd").submit(function () {
                    $("#appbundle_medicalformsfields_name").val($("#field_name").val());
                });*/
                if ($("#appbundle_medicalformsfields_name").val() !== "") {
                    $("#field_name").val($("#appbundle_medicalformsfields_name").val());
                    $("#field_name").removeAttr("disabled");
                    $("#field_name_edit").attr("disabled", "disabled").removeClass("lilaOscuro").addClass("gris");
                }

                /********SELECT ***********************/

                $('#appbundle_medicalformsfields_field').change(function () {
                    $("._conf").remove();
                    $(".help-data-info").remove();
                    $(".datainput textarea").val("");
                    $(".datainput").addClass("hidden");

                    var path = '{{ path("medical_forms_fields_loadsettings", {'field': '_f', 'name': '_n'}) }}';
                    path = path.replace("_f", $(this).val());
                    path = path.replace("_n", 'name');
                    $("#appbundle_medicalformsfields_submit").attr("disabled", "disabled");
                    $(".btn-submit-field").prop("disabled",true);
                    $.getJSON(path, function (data) {
                        if (data.showData === 1) {
                            $(".datainput").removeClass("hidden");
                        }
                        if (data.helpData !== undefined) {
                            $(".datainput").before(data.helpData);
                        }
                        $(".submit-btn").before(data.extra).before(data.required).before(data.showlabel);
                        $("#appbundle_medicalformsfields_submit").removeAttr("disabled");
                        $(".btn-submit-field").prop("disabled",false);
                        $("#appbundle_medicalformsfields_data").val("Si\nNo");
                    });


                });
            
            }
            function ajaxForm(){
                $( ".ajaxForm" ).submit(function( event ) {  
                    /*$(".form-field" ).html("");*/
                    $(".btn-submit-field").prop("disabled",true);
                    $(".btn-submit-field").html("Enviando...");
                    $("#appbundle_medicalformsfields_name").val($("#field_name").val());

                    $.ajax({
                         type: $(this).attr('method'),
                         url: $(this).attr('action'),
                         data: $(this).serialize()
                     })
                     .done(function (data) {
                         if (typeof data.message !== 'undefined') {
                            //alert(data.message);
                            $(".tr-field" ).remove();   
                            
                            var n = data.fieldaft.indexOf("fs");
                            var idAf = '';
                            var str = '';
                            var classLevel = 'td-field-text td-field level_0 td-field-0';
                            if(data.gr!=='') classLevel= ($( "tr[data-gr='"+data.gr+"']:first td:first").prop("class"));
                            var field = '<tr id="tr-field-'+data.id+'" class="move fffs" data-idf="'+data.id+'" data-idfs="'+data.fs+'" data-pg="'+data.pg+'"  data-order="'+data.pos+'" data-gr="'+data.gr+'">'+
                                    '<td class="'+classLevel+'"><a href="#">'+data.name+'</a></td>'+                                                        
                                    '<td class="text-center td-sel">'+
                                        '<input type="checkbox" data-idsubfields="group_'+data.id+'" class="fieldselect form-control page_'+data.pg+' fieldset_'+data.fs+' group_" name="fields[]" value="'+data.namesis+'" id="page_'+data.pg+'-fieldset_'+data.fs+'-group--'+data.id+'">'+
                                    '</td>'+
                                    '<td class="text-center td-req">'+
                                        '<input type="checkbox" class="requeselect" name="reque[]" '+(data.req === true?'checked="checked"':'')+' value="'+data.namesis+'">'+                                                        
                                    '</td>'+
                                    '<td class="text-center btn-actions" style="width: 200px;">'+                                                                                                                                                                                                                                                        
                                        '<button type="button" class="btn btn-outline-primary subir" style="padding: 0.25rem 0.5rem;" title="Subir orden" data-fs="'+data.fs+'" data-gr=""><i class="fa fa-arrow-up"></i></button> '+
                                        '<button type="button" class="btn btn-outline-primary bajar" style="padding: 0.25rem 0.5rem;" title="Bajar orden" data-fs="'+data.fs+'" data-gr=""><i class="fa fa-arrow-down"></i></button> '   +                                                         
                                        '<button type="button" class="btn btn-outline-primary nuevo" style="padding: 0.25rem 0.5rem;" title="Agregar una nueva pregunta" data-fs="'+data.fs+'" data-gr=""><i class="fa fa-plus"></i></button> '+
                                        '<button type="button" class="btn btn-outline-primary eliminar conf-modal-dialog-btn" style="padding: 0.25rem 0.5rem;" title="Eliminar pregunta" data-fs="'+data.fs+'" data-gr=""><i class="fa fa-minus"></i></button> ' +                                                               
                                    '</td>'+
                                '</tr>';
                        
                            $(field).insertAfter( "#"+data.fieldaft);       
                            
                            var res = '';
                            
                            if ($("tr[id^='tr-field-']:first").data("idf")!==data.id){
                                str = $("tr[id^='tr-field-']:first a").prop("href");
                                if (str!==undefined)  
                                res = str.replace('/'+$("tr[id^='tr-field-']:first").data("idf")+'/','/'+data.id+'/');  
                            
                            }else{
                                str = $("tr[id^='tr-field-']:last a").prop("href");
                                if (str!==undefined)  
                                res = str.replace('/'+$("tr[id^='tr-field-']:last").data("idf")+'/','/'+data.id+'/');  
                            
                            }                            
                            
                            
                            $("#tr-field-"+data.id+" td.td-field a").prop("href",res);
                            
                            $("#tr-field-"+data.id+" .fieldselect:checkbox").click(function () {
                                activarSelect(this);
                            }).change(function () {
                                activarChange(this);
                            });
                            
                            eliminarPreguntaModal();

                         }
                     })
                     .fail(function (jqXHR, textStatus, errorThrown) {
                         if (typeof jqXHR.responseJSON !== 'undefined') {
                             if (jqXHR.responseJSON.hasOwnProperty('form')) {
                                 //alert(jqXHR.responseJSON.form)
                                $('.tr-field td').html("").append(jqXHR.responseJSON.form);
                                /*$("#appbundle_medicalformsfields_medicalFormsFieldset")*/
                                ajustForm($("#appbundle_medicalformsfields_medicalFormsFieldset").val());                                             
                                ajaxForm();
                             }

                             //alert(jqXHR.responseJSON.message);

                         } else {
                             alert(errorThrown);
                         }

                     });
                     event.preventDefault(); /**/
                 }); 
            }
            
            
                                    
            
            var fNuevo = function (data) {   
               
               loadFormFieldTr($(this),$(this).data("fs"),$(this).data("gr"));
               return false;   
               
            };
            var fsNuevo = function (data) {                
               loadFormFieldTrFs($(this),$(this).data("fs"));
               return false;   
               
            };
            var fMover = function () {
                var $tr = $(this).parents("tr:first");
                              
                if ($tr.is(".move")) {
                    var id = $tr.data("idf");
                    var idw = "0";
                    
                    if ($(this).is(".subir") && $tr.prev().is(".move") && $tr.data("gr")==$tr.prev().data("gr")) {
                        idw = $tr.prev().data("idf") ;
                        $tr.insertBefore($tr.prev());
                        
                    } else if ( $(this).is(".bajar") && $tr.next().is(".move") && $tr.data("gr")==$tr.next().data("gr")) {
                        idw = $tr.next().data("idf") ;
                        $tr.insertAfter($tr.next());
                        
                    }
                    
                    
                    var path = '{{ path( "medical_forms_fields_order_med", { "id": "_id","idw": "_idw" }) }}';
                    path = path.replace("_id", id);
                    path = path.replace("_idw", idw);
                    
                    $.ajax({                        
                        url: path                        
                    })
                    .done(function (data) { 
                        //alert(data);
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        alert(errorThrown);                    
                    });
                    
                    
                }
                return false;
            };
            var fEliminar = function () {
                var path = '{{ path( "medical_forms_fields_delete_med", { "id": "_id" }) }}';
                path = path.replace("_id", $("#"+trE).data("idf"));
                var dia = $( this );
                $("#text_del").show();
                $(".preloader_del").show();
                $(".ui-dialog-buttonset .ui-button").prop("disabled",true);
                $.ajax({                        
                    url: path                        
                })
                .done(function (data) { 
                    $(".preloader_del").hide();
                    dia.dialog( "close" );    
                    $(".ui-dialog-buttonset .ui-button").prop("disabled",false);
                    if (typeof data !== 'undefined' && data !== 'false') {                                 
                        $("#"+trE).remove();
                        trE="";
                    } else {
                        //alert(data);
                    }
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    alert(errorThrown);                    
                });
                
                
                return false;
            };
            
            var fEliminarCat = function () {
                
                if ($( "tr[data-idfs='"+$("#"+trE).data("idf")+"']").length<=0){
                    var path = '{{ path( "medical_forms_fieldsets_delete_med", { "id": "_id" }) }}';
                    path = path.replace("_id", $("#"+trE).data("idf"));
                    var dia = $( this );
                    $("#text_del").show();
                    $(".preloader_del").show();
                    $(".ui-dialog-buttonset .ui-button").prop("disabled",true);
                    $.ajax({                        
                        url: path                        
                    })
                    .done(function (data) { 
                        $(".preloader_del").hide();
                        dia.dialog( "close" );    
                        $(".ui-dialog-buttonset .ui-button").prop("disabled",false);
                        if (typeof data !== 'undefined' && data !== 'false') {                                 
                            $("#"+trE).remove();
                            trE="";
                        } else {
                            //alert(data);
                        }
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        alert(errorThrown);                    
                    });

                }else{
                    $( ".conf-modal-dialog-cat" ).dialog("close");
                }
                
                return false;
            };
            
            var trE = "";
            var fEliminarR = function () {
               trE = $(this).parents("tr:first").prop("id")
                
            };


            
            $(document).ready(function () {
                
                $(".preloader_del").hide();                
                
                eliminarPreguntaModal();
                eliminarCategoriaModal();
                
                $("table")
                .on("click", ".subir", fMover)
                .on("click", ".bajar", fMover)
                .on("click", ".nuevo", fNuevo)
                .on("click", ".nuevo-fs", fsNuevo)
                .on("click", ".eliminar", fEliminarR)
                .on("click", ".eliminar-fs", fEliminarR);
        
                $(".agregar-preg").click(function(){                    
                    loadFormField($(this).prop("rel"));
                    return false;                    
                });
                             
                $(".input-lg").prop('disabled', true);
                $("#appbundle_medicalforms_views_name").val("Especialista: {{physician.user.name}} {{physician.user.lastname}}");
                $("#appbundle_medicalforms_views_specialty").val("{{physician.specialty.id}}");
                
                //assign click event to pages
                $(".page-label").click(function () {
                    $('.' + $(this).attr("rel")).parents('tr').toggle('display');
                    $(this).toggleClass('opened');
                    return false;
                });
                
                //open the first page
                $(".page-label").each(function () {                    
                    if (!$(this).parents('tr.trPage').is(':first-child')) {
                        $('.' + $(this).attr("rel")).parents('tr').toggle('display');
                        $(this).toggleClass('opened');
                    }
                });
                
                //open the other rows on the first page
                $(".trPage:first").each(function () {
                    $('.' + $(this).attr("rel")).parents('tr').toggle('display');
                    $(this).toggleClass('opened');
                });

                $(".fieldselect:checkbox").click(function () {
                    activarSelect(this)                           

                });

                $(".fieldselect:checkbox").change(function () {
                    activarChange(this);
                });

                var form = document.getElementById('createview');
                form.addEventListener('submit', function (event) {
                    $('.fieldselect:checkbox').removeAttr('disabled');
                });

            {% if entity.fieldsets is defined and entity.fieldsets!=''%}
                    var fieldsets = new Array({{entity.fieldsets|raw}});
                    $('.fieldselect:checkbox').each(function () {                        
                        if ($.inArray($(this).val(), fieldsets) !== -1) {
                            $(this).prop("checked", true).change();
                        }
                    });
            {% endif %}
                {% if entity.fields is defined and entity.fields!=''%}                
                    var fields = new Array({{entity.fields|raw}});
                    $('.fieldselect:checkbox').each(function () {
                        if ($.inArray($(this).val(), fields) !== -1) {
                            $(this).prop("checked", true).change();
                        }
                    });
                {% endif %}
                {% if entity.required is defined and (entity.required|length)>2%}                
                        var fields = new Array({{entity.required|raw}});
                        $('.requeselect:checkbox').prop("checked", false).change();
                        $('.requeselect:checkbox').each(function () {
                            if ($.inArray($(this).val(), fields) !== -1) {
                                $(this).prop("checked", true).change();
                            }
                        });
                {% endif %}

                    });

            </script>
           
            
           <script>
        function changeVal(val) {
            
        
            var result = val.replace(/[^A-Za-z0-9;]/g, "_").toLowerCase();
                if (result.length > 20) {
                    result = result.substr(0, 20);
                }
                $("#field_name").val(result);
        }
        $(document).ready(function () {

            $(".formAmd .row-f").prepend('<input type="hidden" id="field_name" maxlength="20">');
            $("#appbundle_medicalformsfields_label").keyup(function () {
                var valF = $(this).val();
                changeVal(valF);
            });
            $("#appbundle_medicalformsfields_label").change(function () {
                var valF = $(this).val();
                changeVal(valF);
            });
            $("#field_name").keyup(function () {
                var valF = $(this).val();
                result = valF.replace(/[^A-Za-z0-9;]/g, "_").toLowerCase();
                if (result.length > 20) {
                    result = result.substr(0, 20);
                }
                $(this).val(result);
            });
            $("#field_name").change(function () {
                var valF = $(this).val();
                result = valF.replace(/[^A-Za-z0-9;]/g, "_").toLowerCase();
                if (result.length > 20) {
                    result = result.substr(0, 20);
                }
                $(this).val(result);
            });
            $("#field_name_edit").click(function () {
                $("#field_name").removeAttr("disabled");
                $("#field_name_edit").attr("disabled", "disabled").removeClass("lilaOscuro").addClass("gris");
            });
            $(".formAmd").submit(function () {
                $("#appbundle_medicalformsfields_name").val($("#field_name").val());
            });
            if ($("#appbundle_medicalformsfields_name").val() !== "") {
                $("#field_name").val($("#appbundle_medicalformsfields_name").val());
                $("#field_name").removeAttr("disabled");
                $("#field_name_edit").attr("disabled", "disabled").removeClass("lilaOscuro").addClass("gris");
            }

            /********SELECT ***********************/

            $('#appbundle_medicalformsfields_field').change(function () {
                $("._conf").remove();
                $(".help-data-info").remove();
                $(".datainput textarea").val("");
                $(".datainput").addClass("hidden");

                var path = '{{ path("medical_forms_fields_loadsettings", {'field': '_f', 'name': '_n'}) }}';
                path = path.replace("_f", $(this).val());
                path = path.replace("_n", 'name');
                $("#appbundle_medicalformsfields_submit").attr("disabled", "disabled");
                $.getJSON(path, function (data) {
                    if (data.showData === 1) {
                        $(".datainput").removeClass("hidden");
                    }
                    if (data.helpData !== undefined) {
                        $(".datainput").before(data.helpData);
                    }
                    $(".submit-btn").before(data.extra).before(data.required).before(data.showlabel);
                    $("#appbundle_medicalformsfields_submit").removeAttr("disabled");
                });


            });
        });

    </script>
    
    
            {% endblock %}